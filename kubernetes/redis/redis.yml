

apiVersion: apps/v1 #  for k8s versions before 1.9.0 use apps/v1beta2  and before 1.8.0 use extensions/v1beta1
kind: Deployment
metadata:
  name: redis
spec:
  selector:
    matchLabels:
      app: redis
      role: master
      tier: backend
  replicas: 1
  template:
    metadata:
      labels:
        app: redis
        role: master
        tier: backend
    spec:
      containers:
      - name: master
        image: redis:latest  # or just image: redis
        #image: registry.k8s.io/redis:e2e  # or just image: redis
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
        ports:
        - containerPort: 6379
---

apiVersion: apps/v1 #  for k8s versions before 1.9.0 use apps/v1beta2  and before 1.8.0 use extensions/v1beta1
kind: Deployment
metadata:
  name: redisinsight
spec:
  selector:
    matchLabels:
      app: redisinsight
      role: master
      tier: backend
  replicas: 1
  template:
    metadata:
      labels:
        app: redisinsight
        role: master
        tier: backend
    spec:
      containers:
      - name: redisinsight
        image: redis/redisinsight:latest
        ports:
        - containerPort: 5540


---
apiVersion: v1
kind: Service
metadata:
  name: redis
  namespace: redis
spec:
  type: ClusterIP
  ports:
    - name: 6379-redis
      port: 6379
      protocol: TCP
      targetPort: 6379
  selector:
   app: redis


---
apiVersion: v1
kind: Service
metadata:
  name: redisinsight
  namespace: redis
spec:
  type: ClusterIP
  ports:
    - name: 5540-redis
      port: 5540
      protocol: TCP
      targetPort: 5540
  selector:
    app: redisinsight

# ---
# apiVersion: "v1"
# kind: "Service"
# metadata:
#   name: "redisinsight"
#   namespace: redis
# spec:
#   ports:
#   - name: "http"
#     nodePort: 30111
#     port: 5540
#     protocol: "TCP"
#     targetPort: 5540
#   selector:
#     app: "redisinsight"
#   type: "NodePort"